subroutine newdet(nelac,ncf,iadd,norb,nexst,nd,trou,part,ordertab,orbtab,spintab,deg,ygood)
  implicit none
!     assign order rank depending on the spin 
!      2 determinants : +- ; -+
!      3 determinants : +-- ; -+- ; --+
!      6 determinants : ++-- ; +-+- ; +--+ ; -++- ; -+-+ ; --++  

!    add any missing determinants
  integer :: nelac,iadd,ncf,norb
  integer,dimension(*) :: nexst,nd,trou,part
  logical,dimension(*) :: ygood
  integer :: spintab(iadd,nelac),orbtab(iadd,nelac),deg(iadd,10+1),ordertab(iadd,10)
  
  logical :: y1,y2
  integer :: itr,i,j,iaddnd,imax,ne,iwarn

  imax=iadd
  iadd=ncf
  iwarn=0
  ordertab=0      
  iaddnd=nexst(ncf)+nd(ncf)
  do i=1,ncf
    ygood(i)=.true.
    select case(deg(i,1))
! ***** Number of combinaison : 0 ******************************************      
    case(0)
      ygood(i)=.false.
! ***** Number of combinaison : 1 ******************************************            
    case(1)
      select case(nelac)
      case(1)
        cycle
      case(2)
        cycle
      case(3)
        if(.not.(orbtab(i,1).eq.orbtab(i,2).or.orbtab(i,1).eq.orbtab(i,3).or.orbtab(i,2).eq.orbtab(i,3))) then
          write(*,*) 'WARNING, not doubly occupied'
          iwarn=iwarn+1
          ygood(i)=.false.
        endif  
      end select
! ***** Number of combinaison : 2 ******************************************            
    case(2)
      select case(nelac)
      case(2)
        if(spintab(deg(i,2),1).eq.1) then
          ordertab(i,1)=1
          ordertab(i,2)=2
        else
          ordertab(i,1)=2
          ordertab(i,2)=1
        endif
      case(3)
!      add the missing determinant  
        iadd=iadd+1
        deg(i,4)=iadd
        deg(i,1)=3
        ne=nexst(deg(i,2))
        nexst(iadd)=ne
        nd(iadd)=iaddnd
        iaddnd=iaddnd+ne
        spintab(iadd,:)=-1
        orbtab(iadd,:)=orbtab(deg(i,2),:)
        itr=ne
        y1=.false.
        y2=.false.
!          reconstruct trou/part          
        do j=1,nelac
          if(spintab(deg(i,2),j).eq.spintab(deg(i,3),j)) then
            spintab(iadd,j)=1
            select case(orbtab(iadd,j))
            case(1)
              part(nd(iadd)+ne)=2*norb+1
              trou(nd(iadd)+ne)=2
            case(2)
              part(nd(iadd)+ne)=2*norb+1
              trou(nd(iadd)+ne)=1
            case DEFAULT
              itr=itr-1
              part(nd(iadd)+ne)=2*norb+1
              trou(nd(iadd)+ne)=2
              part(nd(iadd)+itr)=orbtab(iadd,j)
              trou(nd(iadd)+itr)=1                
            end select
          else  
            select case(orbtab(iadd,j))
            case(1)
              y1=.true.
            case(2)
              y2=.true.
            case DEFAULT
              itr=itr-1
              part(nd(iadd)+itr)=orbtab(iadd,j)+norb
              trou(nd(iadd)+itr)=-1                
            end select
          endif
        enddo
                
        if(.not.y1) then
          do j=1,ne
            if(trou(nd(iadd)+j).eq.-1) then
              trou(nd(iadd)+j)=norb+1
              exit
            endif    
          enddo
        endif  
        if(.not.y2) then
          do j=1,ne
            if(trou(nd(iadd)+j).eq.-1) then
              trou(nd(iadd)+j)=norb+2
              exit
            endif  
          enddo
        endif           
! reorder
        if(spintab(deg(i,2),1).eq.1) then
          ordertab(i,1)=1
          if(spintab(deg(i,3),2).eq.1) then 
            ordertab(i,2)=2
            ordertab(i,3)=3
          else
            ordertab(i,2)=3
            ordertab(i,3)=2
          endif  
        else
          if(spintab(deg(i,2),2).eq.1) then
            ordertab(i,1)=2
            if(spintab(deg(i,3),1).eq.1) then 
              ordertab(i,2)=1
              ordertab(i,3)=3
            else
              ordertab(i,2)=3
              ordertab(i,3)=1
            endif
          else
            ordertab(i,1)=3
            if(spintab(deg(i,3),1).eq.1) then 
              ordertab(i,2)=1
              ordertab(i,3)=2
            else
              ordertab(i,2)=2
              ordertab(i,3)=1
            endif
          endif
        endif
      case(4)
        write(*,*) '4e- not done'
      end select

! ***** Number of combinaison : 3 ******************************************            
    case(3)
      select case(nelac)
      case(3)
        if(spintab(deg(i,2),1).eq.1) then
          ordertab(i,1)=1
          if(spintab(deg(i,3),2).eq.1) then 
            ordertab(i,2)=2
            ordertab(i,3)=3
          else
            ordertab(i,2)=3
            ordertab(i,3)=2
          endif  
        else
          if(spintab(deg(i,2),2).eq.1) then
            ordertab(i,1)=2
            if(spintab(deg(i,3),1).eq.1) then 
              ordertab(i,2)=1
              ordertab(i,3)=3
            else
              ordertab(i,2)=3
              ordertab(i,3)=1
            endif
          else
            ordertab(i,1)=3
            if(spintab(deg(i,3),1).eq.1) then 
              ordertab(i,2)=1
              ordertab(i,3)=2
            else
              ordertab(i,2)=2
              ordertab(i,3)=1
            endif
          endif
        endif
      case(5)
        write(*,*) '5e- not implemented in morue.f '
      end select
      
! ***** Number of combinaison : 6 ******************************************            
    case(6)
    write(*,*) '4e- not implemented in morue.f '
      
    case(10)
     write(*,*) '5e- not implemented in morue.f '
     stop
      
    case DEFAULT 
      ygood(i)=.false.
      write(*,*) 'error : ndeg =',deg(i,1)
      
    end select  

! end of loop on ncf    
  enddo

  write(*,*) 'number of added determinant for spin symmetry : ',iadd-ncf
  write(*,*) 'warning',iwarn
  return
end subroutine